<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
        <calculation class='tableau' formula='&quot;Zip&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Division&quot;' />
          <member value='&quot;State&quot;' />
          <member value='&quot;Zip&quot;' />
        </members>
      </column>
      <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
        <calculation class='tableau' formula='&quot;Penetration&quot;' />
        <members>
          <member value='&quot;Relevant Households&quot;' />
          <member value='&quot;Customer Count&quot;' />
          <member value='&quot;Penetration&quot;' />
          <member value='&quot;Prospective Customers&quot;' />
        </members>
      </column>
      <column caption='Sort Direction' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Descending&quot;'>
        <calculation class='tableau' formula='&quot;Descending&quot;' />
        <members>
          <member value='&quot;Ascending&quot;' />
          <member value='&quot;Descending&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cust_census_combine2 Extract' inline='true' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cust_census_combine2' name='hyper.11t0frn17c33w91a2fh0l02l28lh'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='/Users/jj5jxt/Desktop/market/cust_census_store_distance_and_stores.tde' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.11t0frn17c33w91a2fh0l02l28lh' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>37138</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>29845</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>31668</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistanceMiles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DistanceMiles]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DistanceMiles</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>32691</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOUSEHOLD_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HOUSEHOLD_TYPE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>HOUSEHOLD_TYPE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_bucket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age_bucket]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>age_bucket</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>narrow_age_bucket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[narrow_age_bucket]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>narrow_age_bucket</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wide_income]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>wide_income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_SHIPPED_GROSS_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_SHIPPED_GROSS_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_SHIPPED_GROSS_AMT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>288610</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_SHIPPED_QTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_SHIPPED_QTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_SHIPPED_QTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>889</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_ORDERED_QTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_ORDERED_QTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_ORDERED_QTY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>897</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_RETURNED_QTY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_RETURNED_QTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_RETURNED_QTY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>243</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_RETURNED_SOLD_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_RETURNED_SOLD_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_RETURNED_SOLD_AMT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>142674</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_RETURNED_GROSS_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_RETURNED_GROSS_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_RETURNED_GROSS_AMT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>62081</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_RETURNED_COST_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_RETURNED_COST_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_RETURNED_COST_AMT</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>246696</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_ORDERED_SOLD_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_ORDERED_SOLD_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_ORDERED_SOLD_AMT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>438951</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_ORDERED_GROSS_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_ORDERED_GROSS_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_ORDERED_GROSS_AMT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>290050</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_ORDERED_COST_AMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum_ORDERED_COST_AMT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum_ORDERED_COST_AMT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>548263</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[customer_count]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>customer_count</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>132</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[house_count]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>house_count</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19806</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slice_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[slice_count]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>slice_count</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>480640</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pct</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>437</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zip2]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>zip2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>32969</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17378</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_id]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>53</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>52</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zcta</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zcta]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>zcta</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parent_zcta</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parent_zcta]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>parent_zcta</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>129</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>15616</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>129</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>9098</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3351</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1830</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>all_county_weights</remote-name>
            <remote-type>129</remote-type>
            <local-name>[all_county_weights]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>all_county_weights</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12000</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imprecise</remote-name>
            <remote-type>129</remote-type>
            <local-name>[imprecise]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>imprecise</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>military</remote-name>
            <remote-type>129</remote-type>
            <local-name>[military]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>military</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timezone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timezone]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>timezone</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>34</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>51</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>division</remote-name>
            <remote-type>129</remote-type>
            <local-name>[division]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>division</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>10</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_abr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_abr]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state_abr</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>51</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STORE_NUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STORE_NUMBER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>STORE_NUMBER</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>294</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;' value='Relevant Households' />
        </aliases>
      </column>
      <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
      </column>
      <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
      </column>
      <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
      </column>
      <column caption='Sort' datatype='real' name='[Calculation_2946480068861427716]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Ascending&quot; THEN 1 ELSE -1 END&#13;&#10;*&#13;&#10;CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([Calculation_2946480068898062342])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
      </column>
      <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='zn([customer_count])' />
      </column>
      <column caption='Map Display' datatype='string' name='[Calculation_2946480068901101575]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Non Zero Households' datatype='boolean' name='[Calculation_2946480068911390728]' role='measure' type='nominal'>
        <calculation class='tableau' formula='sum([slice_count])&gt;0' />
      </column>
      <column caption='Formatted Value' datatype='string' name='[Calculation_2946480068914270217]' role='measure' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Penetration&quot; THEN&#13;&#10;    STR(ROUND([Sort (copy)]*100,2))+&apos;%&apos;&#13;&#10;ELSE&#13;&#10;    IF [Sort (copy)]&lt;1000 THEN&#13;&#10;        STR(ROUND([Sort (copy)],0))&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-6)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSE&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-9)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-8,3)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    END&#13;&#10;END' />
      </column>
      <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
      </column>
      <column caption='Geography Search' datatype='string' name='[Calculation_3309582789121560576]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_2946480068860534786]' />
      </column>
      <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
          <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
          <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
          <alias key='&quot;married&quot;' value='Married Couple' />
          <alias key='&quot;single_dad&quot;' value='Single Dad' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region Geo]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State Id (group)]' new-bin='true'>
          <bin default-name='false' value='&quot;Midwest&quot;'>
            <value>&quot;East North Central&quot;</value>
            <value>&quot;West North Central&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Northeast&quot;'>
            <value>&quot;Middle Atlantic&quot;</value>
            <value>&quot;New England&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;East South Central&quot;</value>
            <value>&quot;South Atlantic&quot;</value>
            <value>&quot;West South Central&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Mountain&quot;</value>
            <value>&quot;Pacific&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Value' datatype='real' name='[Sort (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([customer_count])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
      </column>
      <column caption=' Division Geo' datatype='string' name='[State Id (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state_id]' new-bin='true'>
          <bin default-name='false' value='&quot;East North Central&quot;'>
            <value>&quot;IL&quot;</value>
            <value>&quot;IN&quot;</value>
            <value>&quot;MI&quot;</value>
            <value>&quot;OH&quot;</value>
            <value>&quot;WI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East South Central&quot;'>
            <value>&quot;AL&quot;</value>
            <value>&quot;KY&quot;</value>
            <value>&quot;MS&quot;</value>
            <value>&quot;TN&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Middle Atlantic&quot;'>
            <value>&quot;NJ&quot;</value>
            <value>&quot;NY&quot;</value>
            <value>&quot;PA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Mountain&quot;'>
            <value>&quot;AZ&quot;</value>
            <value>&quot;CO&quot;</value>
            <value>&quot;ID&quot;</value>
            <value>&quot;MT&quot;</value>
            <value>&quot;NM&quot;</value>
            <value>&quot;NV&quot;</value>
            <value>&quot;UT&quot;</value>
            <value>&quot;WY&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New England&quot;'>
            <value>&quot;CT&quot;</value>
            <value>&quot;MA&quot;</value>
            <value>&quot;ME&quot;</value>
            <value>&quot;NH&quot;</value>
            <value>&quot;RI&quot;</value>
            <value>&quot;VT&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pacific&quot;'>
            <value>&quot;AK&quot;</value>
            <value>&quot;CA&quot;</value>
            <value>&quot;HI&quot;</value>
            <value>&quot;OR&quot;</value>
            <value>&quot;WA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South Atlantic&quot;'>
            <value>&quot;DC&quot;</value>
            <value>&quot;DE&quot;</value>
            <value>&quot;FL&quot;</value>
            <value>&quot;GA&quot;</value>
            <value>&quot;MD&quot;</value>
            <value>&quot;NC&quot;</value>
            <value>&quot;SC&quot;</value>
            <value>&quot;VA&quot;</value>
            <value>&quot;WV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West North Central&quot;'>
            <value>&quot;IA&quot;</value>
            <value>&quot;KS&quot;</value>
            <value>&quot;MN&quot;</value>
            <value>&quot;MO&quot;</value>
            <value>&quot;ND&quot;</value>
            <value>&quot;NE&quot;</value>
            <value>&quot;SD&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West South Central&quot;'>
            <value>&quot;AR&quot;</value>
            <value>&quot;LA&quot;</value>
            <value>&quot;OK&quot;</value>
            <value>&quot;TX&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Age Bucket' datatype='string' name='[age_bucket]' role='dimension' type='nominal' />
      <column caption='All County Weights' datatype='string' name='[all_county_weights]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='County Fips' datatype='string' name='[county_fips]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
      <column caption='Density' datatype='string' name='[density]' role='dimension' type='nominal' />
      <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
      <column caption='House Count' datatype='real' name='[house_count]' role='dimension' type='ordinal' />
      <column caption='Imprecise' datatype='string' name='[imprecise]' role='dimension' type='nominal' />
      <column caption='Lat' datatype='string' name='[lat]' role='dimension' type='nominal' />
      <column caption='Lng' datatype='string' name='[lng]' role='dimension' type='nominal' />
      <column caption='Military' datatype='string' name='[military]' role='dimension' type='nominal' />
      <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unknown Age' />
        </aliases>
      </column>
      <column caption='Parent Zcta' datatype='string' name='[parent_zcta]' role='dimension' type='nominal' />
      <column caption='Pct' datatype='real' name='[pct]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Abr' datatype='string' name='[state_abr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Timezone' datatype='string' name='[timezone]' role='dimension' type='nominal' />
      <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Unknown Income' />
          <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
        </aliases>
      </column>
      <column caption='Zcta' datatype='string' name='[zcta]' role='dimension' type='nominal' />
      <column datatype='string' name='[zip2]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Calculation_2946480068898062342]' derivation='Sum' name='[sum:Calculation_2946480068898062342:qk]' pivot='key' type='quantitative' />
      <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Geography)' hidden='true' name='[Action (Geography)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
        </groupfilter>
      </group>
      <group caption='Action (Geography,State Id)' hidden='true' name='[Action (Geography,State Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
          <groupfilter function='level-members' level='[state_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Geography,ZIP)' hidden='true' name='[Action (Geography,ZIP)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
          <groupfilter function='level-members' level='[ZIP]' />
        </groupfilter>
      </group>
      <group caption='Action (State Id)' hidden='true' name='[Action (State Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_id]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State Id, ZIP'>
          <field>[state_id]</field>
          <field>[ZIP]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.558901' measure-ordering='alphabetic' measure-percentage='0.356021' parameter-percentage='0.0850785' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Calculation_2946480068898062342:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
          <calculation class='tableau' formula='&quot;Zip&quot;' />
        </column>
        <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
          <calculation class='tableau' formula='&quot;Penetration&quot;' />
        </column>
        <column caption='Sort Direction' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Descending&quot;'>
          <calculation class='tableau' formula='&quot;Descending&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
      <datasources>
        <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
      </datasources>
      <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
        <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
            <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
            <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
            <alias key='&quot;married&quot;' value='Married Couple' />
            <alias key='&quot;single_dad&quot;' value='Single Dad' />
          </aliases>
        </column>
        <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='Unknown Age' />
          </aliases>
        </column>
        <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
        <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
        <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
        <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='Unknown Income' />
            <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
          </aliases>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]'>
        <groupfilter function='level-members' level='[none:HOUSEHOLD_TYPE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]'>
        <groupfilter function='level-members' level='[none:narrow_age_bucket:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]'>
        <groupfilter function='level-members' level='[none:wide_income:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='State Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Geographic Detail' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Zip Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Division Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Region Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Division Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
            <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
              <calculation class='tableau' formula='&quot;Penetration&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Map Display' datatype='string' name='[Calculation_2946480068901101575]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Formatted Value' datatype='string' name='[Calculation_2946480068914270217]' role='measure' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Penetration&quot; THEN&#13;&#10;    STR(ROUND([Sort (copy)]*100,2))+&apos;%&apos;&#13;&#10;ELSE&#13;&#10;    IF [Sort (copy)]&lt;1000 THEN&#13;&#10;        STR(ROUND([Sort (copy)],0))&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-6)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSE&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-9)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-8,3)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    END&#13;&#10;END' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column caption='Value' datatype='real' name='[Sort (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([customer_count])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
            </column>
            <column caption=' Division Geo' datatype='string' name='[State Id (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state_id]' new-bin='true'>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Middle Atlantic&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;OR&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2946480068860534786]' derivation='None' name='[none:Calculation_2946480068860534786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2946480068901101575]' derivation='None' name='[none:Calculation_2946480068901101575:nk]' pivot='key' type='nominal' />
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068914270217]' derivation='User' name='[usr:Calculation_2946480068914270217:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sort (copy)]' derivation='User' name='[usr:Sort (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]'>
            <groupfilter function='level-members' level='[Calculation_2946480068860534786]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[state_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[ZIP]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2946480068860534786:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;Division&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]' field-type='quantitative' max='32283439.149888285' min='27760657.783430357' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]' field-type='quantitative' max='5773983.1712131854' min='3137007.2488605091' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]' />
              <text column='[Parameters].[Parameter 2]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]' />
              <geometry column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Relevant Households: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Customer Count: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Penetration: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Prospective Customers: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]&gt;</run>
                <run>&#10;&lt;[Parameters].[Parameter 2]&gt;:  &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]</rows>
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0936BE3-A51C-4F1F-9109-AF5A026FEC8B}' />
    </worksheet>
    <worksheet name='Geographic Detail'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; Level Detail</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
            <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
              <calculation class='tableau' formula='&quot;Penetration&quot;' />
            </column>
            <column caption='Sort Direction' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Descending&quot;'>
              <calculation class='tableau' formula='&quot;Descending&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Sort' datatype='real' name='[Calculation_2946480068861427716]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Ascending&quot; THEN 1 ELSE -1 END&#13;&#10;*&#13;&#10;CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([Calculation_2946480068898062342])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Non Zero Households' datatype='boolean' name='[Calculation_2946480068911390728]' role='measure' type='nominal'>
              <calculation class='tableau' formula='sum([slice_count])&gt;0' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Geography Search' datatype='string' name='[Calculation_3309582789121560576]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2946480068860534786]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column datatype='real' name='[Sum_ORDERED_COST_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_QTY]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_SOLD_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_COST_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_QTY]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_SOLD_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_SHIPPED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_SHIPPED_QTY]' role='measure' type='quantitative' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2946480068860534786]' derivation='None' name='[none:Calculation_2946480068860534786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3309582789121560576]' derivation='None' name='[none:Calculation_3309582789121560576:nk]' pivot='key' type='nominal' />
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2946480068898062342]' derivation='Sum' name='[sum:Calculation_2946480068898062342:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_COST_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_COST_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_QTY]' derivation='Sum' name='[sum:Sum_ORDERED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_SOLD_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_SOLD_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_COST_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_COST_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_QTY]' derivation='Sum' name='[sum:Sum_RETURNED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_SOLD_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_SOLD_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_SHIPPED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_SHIPPED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_SHIPPED_QTY]' derivation='Sum' name='[sum:Sum_SHIPPED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068861427716]' derivation='User' name='[usr:Calculation_2946480068861427716:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068911390728]' derivation='User' name='[usr:Calculation_2946480068911390728:nk]' pivot='key' type='nominal' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Calculation_2946480068898062342:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_COST_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_QTY:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_SOLD_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_COST_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_QTY:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_SOLD_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_SHIPPED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_SHIPPED_QTY:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[state_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[ZIP]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (State Id)]'>
            <groupfilter function='level-members' level='[state_id]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2946480068860534786:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]' direction='ASC' using='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068861427716:qk]' />
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_3309582789121560576:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' included-values='in-range'>
            <min>872.0</min>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068911390728:nk]'>
            <groupfilter function='member' level='[usr:Calculation_2946480068911390728:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (State Id)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068911390728:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#e6ecf0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]' value='bold' />
            <format attr='font-weight' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#eef1f3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' value='Min Relevant Households'>
              <formatted-text>
                <run>Min Relevant Households</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</rows>
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8FC15D4B-025B-4EC4-AC5A-3EAFAA133B28}' />
    </worksheet>
    <worksheet name='Region Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
            <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
              <calculation class='tableau' formula='&quot;Penetration&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Map Display' datatype='string' name='[Calculation_2946480068901101575]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column datatype='string' name='[Region Geo]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State Id (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;Midwest&quot;'>
                  <value>&quot;East North Central&quot;</value>
                  <value>&quot;West North Central&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Northeast&quot;'>
                  <value>&quot;Middle Atlantic&quot;</value>
                  <value>&quot;New England&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;East South Central&quot;</value>
                  <value>&quot;South Atlantic&quot;</value>
                  <value>&quot;West South Central&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Mountain&quot;</value>
                  <value>&quot;Pacific&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Value' datatype='real' name='[Sort (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([customer_count])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
            </column>
            <column caption=' Division Geo' datatype='string' name='[State Id (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state_id]' new-bin='true'>
                <bin default-name='false' value='&quot;East North Central&quot;'>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East South Central&quot;'>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;TN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Middle Atlantic&quot;'>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;PA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mountain&quot;'>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New England&quot;'>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pacific&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;OR&quot;</value>
                  <value>&quot;WA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Atlantic&quot;'>
                  <value>&quot;DC&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West North Central&quot;'>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;SD&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West South Central&quot;'>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;TX&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[region]' derivation='Attribute' name='[attr:region:nk]' pivot='key' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2946480068860534786]' derivation='None' name='[none:Calculation_2946480068860534786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2946480068901101575]' derivation='None' name='[none:Calculation_2946480068901101575:nk]' pivot='key' type='nominal' />
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sort (copy)]' derivation='User' name='[usr:Sort (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]'>
            <groupfilter function='level-members' level='[Calculation_2946480068860534786]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[state_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[ZIP]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2946480068860534786:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;Region&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]' field-type='quantitative' max='33926860.171676233' min='24901135.066107251' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]' field-type='quantitative' max='7598688.6107013458' min='2441131.1769582974' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:region:nk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Region Geo]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Region Geo]' />
              <geometry column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:region:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Relevant Households: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Customer Count: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Penetration: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Prospective Customers: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Region Geo]&gt;</run>
                <run>&#10;Relevant Households: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&gt;&#10;Customer Count: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&gt;&#10;Penetration: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&gt;&#10;Prospective Customers: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&gt;&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]</rows>
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A6053A1E-1829-47F5-B155-E77FCAFF7D42}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
          </datasources>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows include-empty='true'>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</rows>
        <cols include-empty='true' />
      </table>
      <simple-id uuid='{5E2FE847-BB8F-46B9-9C52-EFFCFA52D814}' />
    </worksheet>
    <worksheet name='State Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
            <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
              <calculation class='tableau' formula='&quot;Penetration&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Map Display' datatype='string' name='[Calculation_2946480068901101575]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Formatted Value' datatype='string' name='[Calculation_2946480068914270217]' role='measure' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Penetration&quot; THEN&#13;&#10;    STR(ROUND([Sort (copy)]*100,2))+&apos;%&apos;&#13;&#10;ELSE&#13;&#10;    IF [Sort (copy)]&lt;1000 THEN&#13;&#10;        STR(ROUND([Sort (copy)],0))&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSEIF [Sort (copy)]&lt;1000000000 THEN&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-6)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    ELSE&#13;&#10;        LEFT(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-9)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-8,3)+&apos;,&apos;+MID(STR(ROUND([Sort (copy)],0)),LEN(STR(ROUND([Sort (copy)],0)))-5,3)+&apos;,&apos;+RIGHT(STR(ROUND([Sort (copy)],0)),3)&#13;&#10;    END&#13;&#10;END' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column caption='Value' datatype='real' name='[Sort (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([customer_count])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[state_name]' derivation='Attribute' name='[attr:state_name:nk]' pivot='key' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2946480068860534786]' derivation='None' name='[none:Calculation_2946480068860534786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2946480068901101575]' derivation='None' name='[none:Calculation_2946480068901101575:nk]' pivot='key' type='nominal' />
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_id]' derivation='None' name='[none:state_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068914270217]' derivation='User' name='[usr:Calculation_2946480068914270217:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sort (copy)]' derivation='User' name='[usr:Sort (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]'>
            <groupfilter function='level-members' level='[Calculation_2946480068860534786]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[ZIP]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2946480068860534786:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;State&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]' field-type='quantitative' max='33705410.179974586' min='24679685.074405558' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]' field-type='quantitative' max='7873863.0704646101' min='2611477.4151086351' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]' />
              <text column='[Parameters].[Parameter 2]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:state_name:nk]' />
              <geometry column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:state_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Relevant Households: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Customer Count: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Penetration: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Prospective Customers: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]&gt;</run>
                <run>&#10;&lt;[Parameters].[Parameter 2]&gt;:  &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]</rows>
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5914B153-24F1-4ACB-B96C-843F73DDBFD1}' />
    </worksheet>
    <worksheet name='Summary Statistics'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column datatype='real' name='[Sum_ORDERED_COST_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_QTY]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_ORDERED_SOLD_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_COST_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_QTY]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_RETURNED_SOLD_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_SHIPPED_GROSS_AMT]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum_SHIPPED_QTY]' role='measure' type='quantitative' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2946480068898062342]' derivation='Sum' name='[sum:Calculation_2946480068898062342:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_COST_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_COST_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_QTY]' derivation='Sum' name='[sum:Sum_ORDERED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_ORDERED_SOLD_AMT]' derivation='Sum' name='[sum:Sum_ORDERED_SOLD_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_COST_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_COST_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_QTY]' derivation='Sum' name='[sum:Sum_RETURNED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_RETURNED_SOLD_AMT]' derivation='Sum' name='[sum:Sum_RETURNED_SOLD_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_SHIPPED_GROSS_AMT]' derivation='Sum' name='[sum:Sum_SHIPPED_GROSS_AMT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum_SHIPPED_QTY]' derivation='Sum' name='[sum:Sum_SHIPPED_QTY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Calculation_2946480068898062342:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_COST_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_QTY:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_ORDERED_SOLD_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_COST_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_QTY:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_RETURNED_SOLD_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_SHIPPED_GROSS_AMT:qk]&quot;</bucket>
              <bucket>&quot;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:Sum_SHIPPED_QTY:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]'>
            <groupfilter function='level-members' level='[Calculation_2946480068860534786]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[state_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[ZIP]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,ZIP)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
            <format attr='font-weight' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Multiple Values]' value='12' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]' value='11' />
            <format attr='font-weight' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' value='Householder Age' />
            <format attr='title' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]' value='Household Income' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{00AA5F70-1983-4F0B-A48B-F7DC54D01A06}' />
    </worksheet>
    <worksheet name='Zip Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
              <calculation class='tableau' formula='&quot;Zip&quot;' />
            </column>
            <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
              <calculation class='tableau' formula='&quot;Penetration&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
            <column caption='Penetration' datatype='real' name='[Calculation_2946480068858904576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2946480068898062342])/SUM([slice_count])' />
            </column>
            <column caption='Prospective Customers' datatype='real' name='[Calculation_2946480068859076609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([slice_count])-sum([Calculation_2946480068898062342])' />
            </column>
            <column caption='Geography' datatype='string' name='[Calculation_2946480068860534786]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Region&quot; THEN [region]&#13;&#10;WHEN &quot;Division&quot; THEN [division]&#13;&#10;WHEN &quot;State&quot; THEN [state_name]&#13;&#10;WHEN &quot;Zip&quot; THEN [Calculation_2946480068925079562]&#13;&#10;END' />
            </column>
            <column caption='Customer Count ' datatype='real' name='[Calculation_2946480068898062342]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='zn([customer_count])' />
            </column>
            <column caption='Map Display' datatype='string' name='[Calculation_2946480068901101575]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Zip - State' datatype='string' name='[Calculation_2946480068925079562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[ZIP]+&apos; - &apos;+[state_id]' />
            </column>
            <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
                <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
                <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
                <alias key='&quot;married&quot;' value='Married Couple' />
                <alias key='&quot;single_dad&quot;' value='Single Dad' />
              </aliases>
            </column>
            <column caption='Value' datatype='real' name='[Sort (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &quot;Relevant Households&quot; THEN SUM([slice_count])&#13;&#10;WHEN &quot;Customer Count&quot; THEN SUM([customer_count])&#13;&#10;WHEN &quot;Penetration&quot; THEN [Calculation_2946480068858904576]&#13;&#10;WHEN &quot;Prospective Customers&quot; THEN [Calculation_2946480068859076609]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[ZIP]' derivation='Attribute' name='[attr:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_id]' derivation='Attribute' name='[attr:state_id:nk]' pivot='key' type='nominal' />
            <column caption='Customer Count' datatype='real' name='[customer_count]' role='measure' type='quantitative' />
            <column caption='Division' datatype='string' name='[division]' role='dimension' type='nominal' />
            <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Age' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2946480068860534786]' derivation='None' name='[none:Calculation_2946480068860534786:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2946480068901101575]' derivation='None' name='[none:Calculation_2946480068901101575:nk]' pivot='key' type='nominal' />
            <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
            <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
            <column caption='State Id' datatype='string' name='[state_id]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customer_count]' derivation='Sum' name='[sum:customer_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[slice_count]' derivation='Sum' name='[sum:slice_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068858904576]' derivation='User' name='[usr:Calculation_2946480068858904576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2946480068859076609]' derivation='User' name='[usr:Calculation_2946480068859076609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sort (copy)]' derivation='User' name='[usr:Sort (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Unknown Income' />
                <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]'>
            <groupfilter function='level-members' level='[Calculation_2946480068860534786]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_2946480068860534786]' />
              <groupfilter function='level-members' level='[state_id]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2946480068860534786:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;All&quot;' />
              <groupfilter function='member' level='[none:Calculation_2946480068901101575:nk]' member='&quot;Zip&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography)]</column>
            <column>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Action (Geography,State Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]' field-type='quantitative' max='49521629.801329814' min='5269924.9720283337' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]' field-type='quantitative' max='18209557.114085883' min='-7591088.7060575178' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:state_id:nk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:ZIP:nk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]' />
              <tooltip column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]' />
              <text column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]' />
              <lod column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]' />
              <geometry column='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' underline='true'>&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]&gt; (&lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[attr:state_id:nk]&gt;)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Relevant Households: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:slice_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Customer Count: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[sum:customer_count:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Penetration: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068858904576:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontsize='9'>Prospective Customers: &lt;[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068859076609:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Latitude (generated)]</rows>
        <cols>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0AD7509A-D8C9-4B4D-BDB8-E6F3A27655B8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cust_census_combine2 Extract' name='federated.08iq0z604mf9vc1e7dgay1hwi8tr' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Geography' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Zip&quot;'>
          <calculation class='tableau' formula='&quot;Zip&quot;' />
          <members>
            <member value='&quot;Region&quot;' />
            <member value='&quot;Division&quot;' />
            <member value='&quot;State&quot;' />
            <member value='&quot;Zip&quot;' />
          </members>
        </column>
        <column caption='Sort Field' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Penetration&quot;'>
          <calculation class='tableau' formula='&quot;Penetration&quot;' />
          <members>
            <member value='&quot;Relevant Households&quot;' />
            <member value='&quot;Customer Count&quot;' />
            <member value='&quot;Penetration&quot;' />
            <member value='&quot;Prospective Customers&quot;' />
          </members>
        </column>
        <column caption='Sort Direction' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Descending&quot;'>
          <calculation class='tableau' formula='&quot;Descending&quot;' />
          <members>
            <member value='&quot;Ascending&quot;' />
            <member value='&quot;Descending&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.08iq0z604mf9vc1e7dgay1hwi8tr'>
        <column caption='Geography Search' datatype='string' name='[Calculation_3309582789121560576]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Calculation_2946480068860534786]' />
        </column>
        <column caption='Household Type' datatype='string' name='[HOUSEHOLD_TYPE]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;ambiguous_woman&quot;' value='Unmarried Woman' />
            <alias key='&quot;male_alone&quot;' value='Man Living Alone' />
            <alias key='&quot;male_not_alone&quot;' value='Man Living with Others' />
            <alias key='&quot;married&quot;' value='Married Couple' />
            <alias key='&quot;single_dad&quot;' value='Single Dad' />
          </aliases>
        </column>
        <column caption='Narrow Age Bucket' datatype='string' name='[narrow_age_bucket]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='Unknown Age' />
          </aliases>
        </column>
        <column-instance column='[Calculation_3309582789121560576]' derivation='None' name='[none:Calculation_3309582789121560576:nk]' pivot='key' type='nominal' />
        <column-instance column='[HOUSEHOLD_TYPE]' derivation='None' name='[none:HOUSEHOLD_TYPE:nk]' pivot='key' type='nominal' />
        <column-instance column='[narrow_age_bucket]' derivation='None' name='[none:narrow_age_bucket:nk]' pivot='key' type='nominal' />
        <column-instance column='[slice_count]' derivation='None' name='[none:slice_count:qk]' pivot='key' type='quantitative' />
        <column-instance column='[wide_income]' derivation='None' name='[none:wide_income:nk]' pivot='key' type='nominal' />
        <column caption='Slice Count' datatype='real' name='[slice_count]' role='measure' type='quantitative' />
        <column caption='Wide Income' datatype='string' name='[wide_income]' role='dimension' type='nominal'>
          <aliases>
            <alias key='%null%' value='Unknown Income' />
            <alias key='&quot;Under 75k&quot;' value='$74,999 or less' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='90588' id='7' param='horz' type='layout-flow' w='79364' x='19909' y='8471'>
            <zone h='90588' id='5' type='layout-basic' w='79364' x='19909' y='8471'>
              <zone h='5874' id='3' name='Summary Statistics' show-title='false' w='79364' x='19909' y='8471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20963' id='11' name='Geographic Detail' show-title='false' w='79364' x='19909' y='78096'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60137' id='22' param='horz' type='layout-flow' w='79364' x='19909' y='17959'>
                <zone h='60137' id='25' name='Zip Map' show-title='false' w='79091' x='19909' y='17959'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='60137' id='23' name='State Map' show-title='false' w='91' x='99000' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='60137' id='26' name='Division Map' show-title='false' w='91' x='99091' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='60137' id='27' name='Region Map' show-title='false' w='91' x='99182' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='3614' id='42' type='text' w='79364' x='19909' y='14345'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>&lt;</run>
                  <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>[Parameters].[Parameter 1]</run>
                  <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>&gt; Level Map &amp; Details</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='160' h='94353' id='6' is-fixed='true' param='vert' type='layout-flow' w='16273' x='727' y='4706'>
            <zone forceUpdate='true' h='3412' id='36' type='text' w='16273' x='727' y='4706'>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='11' underline='true'>Market Level Filters</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='16118' id='10' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' w='16273' x='727' y='8118'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='16118' id='9' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' w='16273' x='727' y='24236'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='16118' id='30' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]' type='filter' values='database' w='16273' x='727' y='40354'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='3412' id='37' type='text' w='16273' x='727' y='56472'>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='11' underline='true'>Detail Filters/Settings</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='12706' id='12' mode='list' param='[Parameters].[Parameter 1]' type='paramctrl' w='16273' x='727' y='59884'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6117' id='40' mode='pattern' name='Geographic Detail' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]' type='filter' values='database' w='16273' x='727' y='72590'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6117' id='13' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='16273' x='727' y='78707'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6117' id='14' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='16273' x='727' y='84824'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8118' id='35' name='Geographic Detail' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' type='filter' values='database' w='16273' x='727' y='90941'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='3765' id='41' type='text' w='79364' x='19909' y='941'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='18' underline='true'>Potential Market Dashboard</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3765' id='43' is-scaled='1' param='C:/Users/jj6dxw/Documents/Merch Dashboard/JJill Logo.jpg' type='bitmap' w='16273' x='727' y='941'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98118' id='44' type='empty' w='2909' x='17000' y='941'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#e6ecf0' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='3765' id='45' type='text' w='79364' x='19909' y='4706'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>Total Market Statistics</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='58' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98118' id='59' param='vert' type='layout-flow' w='98546' x='727' y='941'>
                <zone fixed-size='24' h='3765' id='43' is-fixed='true' is-scaled='1' param='C:/Users/jj6dxw/Documents/Merch Dashboard/JJill Logo.jpg' type='bitmap' w='16273' x='727' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3765' id='41' type='text' w='79364' x='19909' y='941'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='18' underline='true'>Potential Market Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3412' id='36' type='text' w='16273' x='727' y='4706'>
                  <formatted-text>
                    <run bold='true' fontcolor='#4e79a7' fontsize='11' underline='true'>Market Level Filters</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3765' id='45' type='text' w='79364' x='19909' y='4706'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>Total Market Statistics</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16118' id='10' mode='checkdropdown' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' w='16273' x='727' y='8118'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16118' id='9' mode='checkdropdown' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' w='16273' x='727' y='24236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16118' id='30' mode='checkdropdown' name='Summary Statistics' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]' type='filter' values='database' w='16273' x='727' y='40354'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='42' h='5874' id='3' is-fixed='true' name='Summary Statistics' show-title='false' w='79364' x='19909' y='8471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3614' id='42' type='text' w='79364' x='19909' y='14345'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>&lt;</run>
                    <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>[Parameters].[Parameter 1]</run>
                    <run bold='true' fontalignment='1' fontcolor='#79706e' fontsize='12' underline='true'>&gt; Level Map &amp; Details</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60137' id='25' is-fixed='true' name='Zip Map' show-title='false' w='79091' x='19909' y='17959'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60137' id='23' is-fixed='true' name='State Map' show-title='false' w='91' x='99000' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60137' id='26' is-fixed='true' name='Division Map' show-title='false' w='91' x='99091' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60137' id='27' is-fixed='true' name='Region Map' show-title='false' w='91' x='99182' y='17959'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3412' id='37' type='text' w='16273' x='727' y='56472'>
                  <formatted-text>
                    <run bold='true' fontcolor='#4e79a7' fontsize='11' underline='true'>Detail Filters/Settings</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12706' id='12' mode='list' param='[Parameters].[Parameter 1]' type='paramctrl' w='16273' x='727' y='59884'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6117' id='40' mode='pattern' name='Geographic Detail' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]' type='filter' values='database' w='16273' x='727' y='72590'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8118' id='35' name='Geographic Detail' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' type='filter' values='database' w='16273' x='727' y='90941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='20963' id='11' is-fixed='true' name='Geographic Detail' show-title='false' w='79364' x='19909' y='78096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6117' id='13' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='16273' x='727' y='78707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6117' id='14' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='16273' x='727' y='84824'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{528BFEA3-258E-435A-A92E-E573C1E1F45D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Summary Statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27743EE7-D943-428A-8FEA-CB4BF1A194B4}' />
    </window>
    <window class='worksheet' name='Geographic Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_3309582789121560576:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:region:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_abr:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_name:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068911390728:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A556E0A7-790B-4776-956C-476BE54E5AA1}' />
    </window>
    <window class='worksheet' name='Region Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[Region Geo]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:region:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_abr:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{120D186C-369A-47D8-8064-C56B3F5F8797}' />
    </window>
    <window class='worksheet' name='Division Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[State Id (group)]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:region:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_abr:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_name:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3F95EF97-C04A-4820-B72F-86597D469852}' />
    </window>
    <window class='worksheet' name='State Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:region:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_abr:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_name:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Calculation_2946480068914270217:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{428CB7A0-FA0B-45FA-A13E-BE34EF5E5439}' />
    </window>
    <window class='worksheet' name='Zip Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]' type='filter' />
            <card param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[usr:Sort (copy):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[:Measure Names]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068860534786:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:Calculation_2946480068901101575:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:ZIP:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:region:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:slice_count:qk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_abr:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_id:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{971A78CD-983D-4690-87AA-D785A6FBA278}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Division Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Geographic Detail'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Region Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Summary Statistics'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Zip Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='30' />
      <simple-id uuid='{04C7190D-64B8-47FF-A41D-7F437E2B3ADA}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:HOUSEHOLD_TYPE:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:narrow_age_bucket:nk]</field>
            <field>[federated.08iq0z604mf9vc1e7dgay1hwi8tr].[none:wide_income:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4318974A-CBD5-4CFC-B751-70E2EDF351A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographic Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Sheet 7' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Map' width='192'>
      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
      ZwwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='66' name='Summary Statistics' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABCCAYAAAABpNnUAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAA3UlEQVR4nO3WsQ0DQQwEsb+H+6/sepJLcGYFQ8YKNhlAZ2bmgah3ewBsEgBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0j6/Du69/9gBK87MzPYI2OIFIk0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGlfpasK4TwKyaIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Zip Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
